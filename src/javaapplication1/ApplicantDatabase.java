/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jyoti
 */
public class ApplicantDatabase extends javax.swing.JFrame {
        public static Statement stmt;
        public static Connection Conn;
        int reg_id;
        String fname = new String();
        String lname = new String();
        String email_id = new String(); 
        String college = new String();
        String cell_no = new String();
        int score = 0;
        String timestamp = new String();
    /**
     * Creates new form ApplicantDatabase
     */
        
        
        
    public ApplicantDatabase() {
        initComponents();
        
        
        this.setTitle("CAT | Applicant Database");
        this.setLocationRelativeTo(null);
        try {   
        
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
        
        }catch(ClassNotFoundException |InstantiationException |IllegalAccessException q)
        {
            ;
        } 
        
        String url = "jdbc:mysql://localhost:3306/cat?zeroDateTimeBehavior=convertToNull";
        
        String user = "root";
        String pw = "vaibhav";
        Conn = DriverManager.getConnection( url, user, pw );
        stmt  = Conn.createStatement();
        
            
        }
        catch(SQLException sqle)
    {
           System.out.println("SqlException:" + sqle);
    }
    
    loadapplicants();
    ((DefaultTableModel)Applicant_table.getModel()).setRowCount(25);
        
        
        
        
    
        
     
//       ((DefaultTableModel)question_table.getModel()).addRow(new_row); 

    
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Applicant_table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        label_regid = new javax.swing.JTextField();
        button_search_regid = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        button_search_date = new javax.swing.JButton();
        button_search_regid1 = new javax.swing.JButton();
        label_quit = new javax.swing.JLabel();
        combo_dd = new javax.swing.JComboBox();
        combo_mm = new javax.swing.JComboBox();
        combo_yyyy = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel1.setText("Applicant Database");

        Applicant_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Registration ID", "First Name", "Last Name", "Contact number", "Email ID", "College", "Score", "TimeStamp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Applicant_table);
        Applicant_table.getColumnModel().getColumn(0).setPreferredWidth(50);
        Applicant_table.getColumnModel().getColumn(3).setPreferredWidth(100);
        Applicant_table.getColumnModel().getColumn(4).setPreferredWidth(130);
        Applicant_table.getColumnModel().getColumn(5).setPreferredWidth(100);
        Applicant_table.getColumnModel().getColumn(6).setPreferredWidth(15);
        Applicant_table.getColumnModel().getColumn(7).setPreferredWidth(110);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel2.setText("Search by Registration ID");

        label_regid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                label_regidActionPerformed(evt);
            }
        });

        button_search_regid.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_search_regid.setText("Search");
        button_search_regid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_search_regidActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel3.setText("View Applicants appearing on");

        button_search_date.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_search_date.setText("Search");
        button_search_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_search_dateActionPerformed(evt);
            }
        });

        button_search_regid1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_search_regid1.setText("Show all");
        button_search_regid1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_search_regid1ActionPerformed(evt);
            }
        });

        label_quit.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        label_quit.setForeground(new java.awt.Color(51, 51, 255));
        label_quit.setText("Quit");
        label_quit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_quitMouseClicked(evt);
            }
        });

        combo_dd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        combo_mm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        combo_yyyy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", " ", " " }));

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(label_quit))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(375, 375, 375)
                                .addComponent(jLabel1))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(button_search_regid1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_regid, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button_search_regid)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(combo_dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(combo_mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(combo_yyyy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_search_date)))
                        .addGap(0, 58, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(label_regid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_search_regid)
                    .addComponent(jLabel3)
                    .addComponent(button_search_date)
                    .addComponent(combo_dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_yyyy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_search_regid1))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_quit)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_search_regidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_search_regidActionPerformed
        
        try{
        ((DefaultTableModel)Applicant_table.getModel()).setRowCount(0);
        reg_id = Integer.parseInt(label_regid.getText());
        String query_regid = "select * from applicant where reg_id="+Integer.toString(reg_id);
        System.out.println(query_regid);
        ResultSet rs = stmt.executeQuery(query_regid);
        while(rs.next())
        {
            fname = rs.getString(2);
            lname = rs.getString(3);
            cell_no = rs.getString(4);
            email_id = rs.getString(5);
            college = rs.getString(6);
            score = rs.getInt(7);
            timestamp = rs.getString(8);
            System.out.println("Got details");
            ((DefaultTableModel)Applicant_table.getModel()).addRow(new Object [] {reg_id, fname, lname, cell_no, email_id, college, score, timestamp}); 
            return;
        }
        
        JOptionPane.showMessageDialog(null, "No applicant found with the given Registration ID. Please try again.");
        loadapplicants();
        label_regid.setText(null);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Invalid characters in Registration number."+ e);
            loadapplicants();
            label_regid.setText(null);
        }
        
        
    }//GEN-LAST:event_button_search_regidActionPerformed

    private void label_regidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_label_regidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_label_regidActionPerformed

    private void button_search_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_search_dateActionPerformed
        try{
        ((DefaultTableModel)Applicant_table.getModel()).setRowCount(0);
        String dd = Integer.toString(combo_dd.getSelectedIndex() + 1);
        String mm = Integer.toString(combo_mm.getSelectedIndex() + 1);
        String yyyy = Integer.toString(combo_yyyy.getSelectedIndex() + 2012);
        //String dd = label_dd.getText();
        //String mm = label_mm.getText();
        //String yyyy = label_yyyy.getText();
        if(Integer.parseInt(mm) < 10)
        {
            mm ="0"+mm;
        }
        if(Integer.parseInt(dd) < 10)
        {
            dd ="0"+dd;
        }
        String date = dd + "/" + mm + "/" + yyyy;
        System.out.println(date);
        String datequery = "select * from applicant where timestamp like '"+date+"%'";
        System.out.println(datequery);
        int flagy = 0;
        ResultSet rs = stmt.executeQuery(datequery);
        while(rs.next())
        {
            reg_id = rs.getInt(1);
            fname = rs.getString(2);
            lname = rs.getString(3);
            cell_no = rs.getString(4);
            email_id = rs.getString(5);
            college = rs.getString(6);
            score = rs.getInt(7);
            timestamp = rs.getString(8);
            flagy = 1;
            //System.out.println("Got details"); 
            ((DefaultTableModel)Applicant_table.getModel()).addRow(new Object [] {reg_id, fname, lname, cell_no, email_id, college, score, timestamp}); 
        }
        if(flagy == 0)
        {
            JOptionPane.showMessageDialog(null, "No record(s) found for the given date.");
            loadapplicants();
            ((DefaultTableModel)Applicant_table.getModel()).setRowCount(20);
        }
     
            }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "No record(s) found."+ e);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_button_search_dateActionPerformed

    private void button_search_regid1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_search_regid1ActionPerformed
        loadapplicants();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_button_search_regid1ActionPerformed

    private void label_quitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_quitMouseClicked
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_label_quitMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicantDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicantDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicantDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicantDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicantDatabase().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Applicant_table;
    private javax.swing.JButton button_search_date;
    private javax.swing.JButton button_search_regid;
    private javax.swing.JButton button_search_regid1;
    private javax.swing.JComboBox combo_dd;
    private javax.swing.JComboBox combo_mm;
    private javax.swing.JComboBox combo_yyyy;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_quit;
    private javax.swing.JTextField label_regid;
    // End of variables declaration//GEN-END:variables

    public void loadapplicants() {
        
        try{
        ((DefaultTableModel)Applicant_table.getModel()).setRowCount(0);
        String query_for_all = "select * from applicant";
        System.out.println(query_for_all);
        ResultSet rs = stmt.executeQuery(query_for_all);
        while(rs.next())
        {
            reg_id = rs.getInt(1);
            fname = rs.getString(2);
            lname = rs.getString(3);
            cell_no = rs.getString(4);
            email_id = rs.getString(5);
            college = rs.getString(6);
            score = rs.getInt(7);
            timestamp = rs.getString(8);
            System.out.println("Got details");
            ((DefaultTableModel)Applicant_table.getModel()).addRow(new Object [] {reg_id, fname, lname, cell_no, email_id, college, score, timestamp}); 
        }
        
     
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "No record(s) found."+ e);
        }
        
        //throw new UnsupportedOperationException("Not yet implemented");
    }
}

